<?php
/**
 * @file
 * Hook implementations and API functions for drafty module.
 */

/**
 * Implements hook_entity_presave().
 */
function drafty_enforce_entity_presave($entity, $type) {
  $info = entity_get_info();
  if (!empty($info[$type]['entity keys']['revision']) && empty($entity->is_new)) {
    // @todo: entity API function?
    $entity->revision = TRUE;
    $entity->is_new_revision = TRUE;
    $entity->default_revision = TRUE;
    // If Drafty has set a scope already, don't do anything here.
    if (!drafty()->hasScope()) {
      $entity->is_draft_revision = TRUE;
      // Now set the scope so that any entity saves recursively triggered by
      // this entity save such as field collections do not also trigger the
      // draft code path. Since this 'parent' entity will have two revisions
      // saved, that handles any 'child' entities too.
      drafty()->setScope($entity->is_draft_revision);
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function drafty_enforce_form_node_form_alter(&$form, &$form_state) {
  // Since we always force revisions, don't bother showing the option.
  $form['revision_information']['revision']['#access'] = FALSE;
}
